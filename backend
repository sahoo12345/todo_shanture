const express = require('express');
const bodyParser = require('body-parser');
const { Pool } = require('pg');

const app = express();
const port = 5000;

// PG database setup
const pool = new Pool({
  user: 'your_username',
  host: 'localhost',
  database: 'your_database_name',
  password: 'your_password',
  port: 5432,
});

// Middleware
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Routes
// Get all tasks
app.get('/api/tasks', async (req, res) => {
  try {
    const client = await pool.connect();
    const result = await client.query('SELECT * FROM tasks ORDER BY id');
    const tasks = result.rows;
    client.release();
    res.json(tasks);
  } catch (err) {
    console.error('Error fetching tasks', err);
    res.status(500).json({ error: 'Error fetching tasks' });
  }
});

// Add new task
app.post('/api/tasks', async (req, res) => {
  const { task } = req.body;
  try {
    const client = await pool.connect();
    const result = await client.query('INSERT INTO tasks (task, completed) VALUES ($1, $2) RETURNING *', [task, false]);
    const newTask = result.rows[0];
    client.release();
    res.json(newTask);
  } catch (err) {
    console.error('Error adding task', err);
    res.status(500).json({ error: 'Error adding task' });
  }
});

// Delete task
app.delete('/api/tasks/:id', async (req, res) => {
  const taskId = req.params.id;
  try {
    const client = await pool.connect();
    await client.query('DELETE FROM tasks WHERE id = $1', [taskId]);
    client.release();
    res.json({ message: 'Task deleted successfully' });
  } catch (err) {
    console.error('Error deleting task', err);
    res.status(500).json({ error: 'Error deleting task' });
  }
});

// Start server
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});

